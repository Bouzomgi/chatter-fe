name: 'Deploy'
on:
  workflow_dispatch:
  repository_dispatch:
    types: [trigger-deployment]
  push:
    branches: main

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  test-build-deploy:
    runs-on: 'ubuntu-latest'
    environment: prod
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.12.x
          cache: npm

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/gha-deployment
          aws-region: us-east-1

      # - name: Export AWS Credentials for Certbot
      #   run: |
      #     echo "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}" >> $GITHUB_ENV
      #     echo "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}" >> $GITHUB_ENV
      #     echo "AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}" >> $GITHUB_ENV

      - name: Install Certbot
        run: sudo snap install --classic certbot

      - name: Trust Plugin with Root Access
        run: sudo snap set certbot trust-plugin-with-root=ok

      - name: Install Plugin
        run: sudo snap install certbot-dns-route53

      - name: Install boto3
        run: pip install boto3

      - name: Verify AWS Credentials
        run: aws sts get-caller-identity

      - name: Generate SSL Certificate
        run: |
          sudo certbot certonly --dns-route53 -d chitchatter.link \
          --non-interactive --agree-tos -m ${{ secrets.EMAIL }} -v

      ######
      - name: Install Dependencies
        run: npm ci

      - name: Create Production Build
        run: CI='' npm run build
        env:
          REACT_APP_BACKEND_HTTP_ENDPOINT: ${{ vars.REACT_APP_BACKEND_HTTP_ENDPOINT }}
          REACT_APP_BACKEND_WEBSOCKET_ENDPOINT: ${{ vars.REACT_APP_BACKEND_WEBSOCKET_ENDPOINT }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/gha-deployment
          aws-region: us-east-1
