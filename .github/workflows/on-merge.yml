name: 'Deploy'
on:
  workflow_dispatch:
  repository_dispatch:
    types: [trigger-deployment]
  push:
    branches: main

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  test-build-deploy:
    runs-on: 'ubuntu-latest'
    environment: prod
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.12.x
          cache: npm

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/gha-deployment
          aws-region: us-east-1

      - name: Write SSL Keys to File
        run: |
          mkdir -p "${{ GITHUB_WORKSPACE }}/private/cert"
          echo -n "${{ secrets.SSL_CERT }}" | base64 --decode > "${{ GITHUB_WORKSPACE }}/private/cert/cert.pem"
          echo -n "${{ secrets.SSL_PRIVATE_KEY }}" | base64 --decode > "${{ GITHUB_WORKSPACE }}/private/cert/key.pem"
          chmod 600 "${{ GITHUB_WORKSPACE }}/private/cert/cert.pem" "${{ GITHUB_WORKSPACE }}/private/cert/key.pem"

      - name: Install Dependencies
        run: npm ci

      - name: Create Production Build
        run: CI='' npm run build
        env:
          REACT_APP_BACKEND_HTTP_ENDPOINT: ${{ vars.REACT_APP_BACKEND_HTTP_ENDPOINT }}
          REACT_APP_BACKEND_WEBSOCKET_ENDPOINT: ${{ vars.REACT_APP_BACKEND_WEBSOCKET_ENDPOINT }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/gha-deployment
          aws-region: us-east-1
