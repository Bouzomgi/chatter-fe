error_log /var/log/nginx/error.log debug;
access_log /var/log/nginx/access.log;

server {
  listen 80;
  server_name localhost chitchatter.link www.chitchatter.link;

  # Redirect HTTP to HTTPS
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl;
  server_name localhost chitchatter.link www.chitchatter.link;

  # SSL Configuration
  ssl_certificate /etc/cert/cert.pem;
  ssl_certificate_key /etc/cert/key.pem;
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;

  root /usr/share/nginx/html;
  index index.html;

  location / {
    try_files $uri /index.html;
  }

  location /api/ {
    proxy_pass http://api:4000;

    # Set WebSocket headers
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";

    # Preserve original client headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    
    # Forward cookies
    proxy_set_header Cookie $http_cookie;
    proxy_pass_header Set-Cookie;

    # Add CORS headers
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
    add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization';
    add_header 'Access-Control-Allow-Credentials' 'true' always;

    # Handle preflight requests
    if ($request_method = OPTIONS) {
      return 204;
    }
}

  error_page 404 /index.html;
}
